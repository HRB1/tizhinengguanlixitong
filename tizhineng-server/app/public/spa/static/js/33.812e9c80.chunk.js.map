{"version":3,"sources":["views/login/styles/login.module.scss","utils/request.js","api/user.js","store/user/user.actions.js","views/login/index.js"],"names":["module","exports","headers","Headers","Cookie","get","url","data","fetch","method","mode","credentials","body","JSON","stringify","then","res","ok","json","Promise","reject","login","request","setInfo","history","userName","userPwd","checked","window","localStorage","setItem","dispatch","a","code","document","cookie","token","setTimeout","push","type","SETINFO","limitView","filter","i","routeIsVisible","message","error","msg","Login","state","getItem","check","setState","trim","props","this","getFieldDecorator","form","className","css","wrap","content","Item","initialValue","rules","required","min","max","pattern","RegExp","prefix","style","color","placeholder","size","onChange","changeValue","bind","chooes","href","htmlType","onClick","key","e","value","target","Component","connect","bindActionCreators","allAction","create"],"mappings":"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","file":"static/js/33.812e9c80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"login_wrap__3y5sZ\",\"content\":\"login_content__xzDAd\",\"chooes\":\"login_chooes__1-Q5o\",\"login-form-button\":\"login_login-form-button__1uguS\"};","import Cookie from \"js-cookie\"\r\nconst headers = new Headers({\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n    'authorization': Cookie.get('authorization'),\r\n    'api-request':\"yes\"\r\n});\r\nlet farams = (data) => {\r\n    return Object.entries(data).map(item => `${item[0]}=${typeof item[1] === 'object' ? JSON.stringify(item[1]):item[1]}`).join(\"&\")\r\n}\r\n\r\nexport default {\r\n    get(url,data={}){\r\n        return fetch(url+\"?\"+farams(data),{\r\n            method:\"GET\",\r\n            headers\r\n        }).then(res=>{\r\n            if(res.ok){\r\n                return res.json()\r\n            }else{\r\n                return Promise.reject(res)\r\n            }\r\n        })\r\n    },\r\n    post(url,data){\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            credentials: 'include',\r\n            headers,\r\n            body:JSON.stringify(data)\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(res)\r\n            }\r\n        })\r\n    }\r\n}","import request from \"@/utils/request\"\r\nexport const login=(body)=>request.post(\"/user/login\",body)","import { login } from \"@/api/user\"\r\nimport { message } from \"antd\"\r\nimport { SETINFO } from \"../actionTypes\"\r\nexport const setInfo = (body, history) => {\r\n  let { userName, userPwd, checked } = body\r\n  window.localStorage.setItem(\"tzn_user_name\", userName);\r\n  return async (dispatch) => {\r\n    try {\r\n      let res = await login(body)\r\n      if (res.code) {\r\n        if (checked) {\r\n          window.localStorage.setItem(\"tzn_user_pwd\", userPwd);\r\n        } else {\r\n          window.localStorage.setItem(\"tzn_user_pwd\", \"\");\r\n        }\r\n        document.cookie = `authorization=${res.data.token}`\r\n        setTimeout(() => {\r\n          history.push(\"/\")\r\n        }, 0);\r\n      }\r\n      dispatch({\r\n        type: SETINFO,\r\n        data: {\r\n          ...res.data,\r\n          limitView: res.data.limitView.filter(i => i.routeIsVisible)\r\n        }\r\n      })\r\n    } catch (error) {\r\n      let res = await error.json()\r\n      message.error(res.msg)\r\n    }\r\n\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\r\nimport css from \"./styles/login.module.scss\"\r\nimport \"./styles/login.scss\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport * as allAction from \"@/store/user/user.actions\"\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    userName: window.localStorage.getItem(\"tzn_user_name\") || \"\",\r\n    userPwd: window.localStorage.getItem(\"tzn_user_pwd\") || \"\",\r\n    checked: !!window.localStorage.getItem(\"tzn_user_pwd\")\r\n  }\r\n  render() {\r\n    let { userName, userPwd, checked } = this.state\r\n    let { getFieldDecorator } = this.props.form\r\n    return (\r\n      <div className={css.wrap}>\r\n        <div className={css.content}>\r\n          <Form className=\"login-form\">\r\n            <Form.Item>\r\n              {getFieldDecorator('userName', {\r\n                initialValue: userName,\r\n                rules: [{\r\n                  required: true,\r\n                  message: '用户名不能为空'\r\n                },\r\n                {\r\n                  min: 5, max: 10,\r\n                  message: '长度不在范围内'\r\n                },\r\n                {\r\n                  pattern: new RegExp('^\\\\w+$', 'g'),\r\n                  message: '用户名必须为字母或者数字'\r\n                }],\r\n              })(\r\n                <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"请输入用户名\"\r\n                  size=\"large\"\r\n                  onChange={this.changeValue.bind(this, 'userName')}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('userPwd', {\r\n                  initialValue: userPwd,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: '密码不能为空'\r\n                  }]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"请输入密码\"\r\n                    size=\"large\"\r\n                    onChange={this.changeValue.bind(this, 'userPwd')}\r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n            <Form.Item className={`${css.chooes} chooes`}>\r\n              <Checkbox checked={checked} onChange={this.check}>记住密码</Checkbox>\r\n              <a className=\"login-form-forgot\" href=\"https://www.baidu.com\">忘记密码</a>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className={css[\"login-form-button\"]} onClick={this.login}>登录</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  check = () => {\r\n    let { checked } = this.state\r\n    this.setState({\r\n      checked: !checked\r\n    })\r\n  }\r\n  changeValue(key, e) {\r\n    let value = e.target.value.trim()\r\n    this.setState({\r\n      [key]: value\r\n    })\r\n  }\r\n  login = async () => {\r\n    let { userName, userPwd } = this.state\r\n    if (userName.trim() === \"\" || userPwd.trim() === \"\") {\r\n      message.error('用户名或密码不能为空');\r\n    } else {\r\n      this.props.setInfo(this.state, this.props.history)\r\n    }\r\n  }\r\n}\r\nexport default connect(state => ({}), dispatch => bindActionCreators(allAction, dispatch))(Form.create()(Login))\r\n"],"sourceRoot":""}