{"version":3,"sources":["views/home/components/calendar/index.js"],"names":["Test","props","state","currentDay","currentMonth","currentYear","weekList","name","className","dayList","initCalendar","bind","renderHeader","renderBody","preMonth","nextMonth","this","date","nowYear","getFullYear","nowMonth","getMonth","day","getDate","Date","preMonthFirstDate","getMonthFirstDate","setDate","nextMonthFirstDate","currentDate","nowDate","nowMonthFirstDate","nowWeek","getDay","newDateList","startDay","showDayLength","i","dayObject","getDateString","toDateString","push","setState","pre","onClick","map","week","key","index","Component"],"mappings":"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","file":"static/js/38.fd933df3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './style.scss'\r\n\r\nexport default class Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentDay: '',\r\n            currentMonth: '', \r\n            currentYear: '', \r\n            weekList: [\r\n                {name: 'M', className: ''},\r\n                {name: 'T', className: ''},\r\n                {name: 'W', className: ''},\r\n                {name: 'U', className: ''},\r\n                {name: 'F', className: ''},\r\n                {name: 'S', className: ''},\r\n                {name: 'O', className: ''}\r\n            ],\r\n            dayList: []\r\n        }\r\n\r\n        this.initCalendar = this.initCalendar.bind(this);\r\n        this.renderHeader = this.renderHeader.bind(this);\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.preMonth = this.preMonth.bind(this);\r\n        this.nextMonth = this.nextMonth.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n      // style.use() // 需要配置loader 可以直接注释 忽略掉  实现每个模块卸载之后 css也会销毁 可以看之前写的一篇react css局部作用域的文章\r\n    }\r\n\r\n    componentWillUnmount() {\r\n       // style.unuse() // 需要配置loader 可以直接注释 忽略掉 实现每个模块卸载之后 css也会销毁 可以看之前写的一篇react css局部作用域的文章\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initCalendar()\r\n    }\r\n\r\n    // 获取当前date的当月第一天的字符串形式\r\n    getMonthFirstDate(date) {\r\n        let nowYear = date.getFullYear(); // 获取年份\r\n        let nowMonth = date.getMonth()+1; // 获取月份\r\n        return  `${nowYear}-${nowMonth}-01`\r\n    }\r\n\r\n    // 获取当前date的字符串形式\r\n    getDateString(date) {\r\n        let nowYear = date.getFullYear(); // 获取年份\r\n        let nowMonth = date.getMonth()+1; // 获取月份\r\n        let day = date.getDate();\r\n        day = day < 10 ? '0' + day : day;\r\n        return  `${nowYear}-${nowMonth}-${day}`\r\n    }\r\n\r\n    // 上个月\r\n    preMonth() {\r\n        let date = new Date(`${this.state.currentYear}-${this.state.currentMonth}-${this.state.currentDay}`)\r\n        let preMonthFirstDate = new Date(this.getMonthFirstDate(new Date(date.setDate(0)))); // 0 是上个月最后一天\r\n        this.initCalendar(preMonthFirstDate)\r\n    }\r\n\r\n    // 下个月\r\n    nextMonth() {\r\n        let date = new Date(`${this.state.currentYear}-${this.state.currentMonth}-${this.state.currentDay}`)\r\n        let nextMonthFirstDate = new Date(this.getMonthFirstDate(new Date(date.setDate(33))));\r\n        this.initCalendar(nextMonthFirstDate)\r\n    }\r\n\r\n\r\n    // 初始化日历\r\n    initCalendar(currentDate) {\r\n        \r\n        let nowDate = currentDate ? currentDate : new Date();\r\n        let nowMonthFirstDate = this.getMonthFirstDate(nowDate) // 获取当月1号日期\r\n        let nowWeek = new Date(nowMonthFirstDate).getDay() ? new Date(nowMonthFirstDate).getDay() : 7; // 获取星期\r\n        let newDateList = []; // 创建日期数组\r\n        let startDay =  2 - nowWeek; // 开始日期的下标  以为 setDate(0)是上个月最后一天  所以是2-nowWeek\r\n        \r\n        let showDayLength = nowWeek < 6 ? 35 : 42;  // 如果5行能显示下一个月 就只显示5行\r\n        // 循环处理 获取日历上应该显示的日期\r\n        for (let i = startDay; i < startDay + showDayLength; i++) {\r\n            let date = new Date(new Date(nowMonthFirstDate).setDate(i)); // 获取时间对象\r\n            let day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate() // 小于9的数字前面加0\r\n            let dayObject = {\r\n                date: this.getDateString(date),\r\n                day,\r\n                className: '',\r\n            }\r\n            // new Date(str).toDateString() === new Date().toDateString()\r\n            if (date.toDateString() === new Date().toDateString()) {\r\n                dayObject.className = 'today'\r\n            }\r\n            newDateList.push(dayObject)\r\n        }\r\n\r\n        this.setState((pre) => {\r\n            return {\r\n                dayList: newDateList,\r\n                currentDay: nowDate.getDate(),\r\n                currentMonth: nowDate.getMonth() + 1 >= 10 ? nowDate.getMonth() + 1 : '0' + (nowDate.getMonth() + 1),\r\n                currentYear: nowDate.getFullYear(),\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    renderHeader() {\r\n        return(\r\n            <div className = 'calendar-header'>\r\n                <div className = 'calendar-header-left'>\r\n                    <button onClick = {this.preMonth}>上 </button>\r\n                </div>\r\n                <div className = ''>\r\n                    {this.state.currentYear}年{this.state.currentMonth}月\r\n                </div>\r\n                <div className = 'calendar-header-right'>\r\n                    <button onClick = {this.nextMonth}> 下 </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBody() {\r\n        return(\r\n            <div className = 'calendar-body'>\r\n                <div className = 'week-container'>\r\n                    {this.state.weekList.map(week => {\r\n                        return <div key = {week.name} className = {`week ${week.className}`}>{week.name}</div>\r\n                    })}\r\n                </div>\r\n                <div className = 'day-container'>\r\n                    {this.state.dayList.map( (dayObject, index) => {\r\n                        return <div key = {index} className = {`day ${dayObject.className}`}>{dayObject.day}</div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className = 'calendar'>\r\n                {this.renderHeader()}\r\n                {this.renderBody()}\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}