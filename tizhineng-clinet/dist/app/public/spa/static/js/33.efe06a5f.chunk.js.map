{"version":3,"sources":["utils/request.js","api/user.js","store/user/user.actions.js","views/login/index.js","views/login/styles/login.module.scss"],"names":["headers","Headers","Accept","Content-Type","authorization","Cookie","get","api-request","request","url","data","fetch","method","mode","credentials","body","JSON","stringify","then","res","ok","json","Promise","reject","login","setInfo","history","userName","userPwd","checked","window","localStorage","setItem","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_res","wrap","_context","prev","next","sent","code","document","cookie","concat","token","setTimeout","push","type","SETINFO","objectSpread","limitView","filter","i","routeIsVisible","t0","message","error","msg","stop","_x","apply","this","arguments","Login","state","getItem","check","_this","setState","_this$state","trim","props","_this$state2","getFieldDecorator","form","react_default","createElement","className","css","content","es_form","Item","initialValue","rules","required","min","max","pattern","RegExp","input","prefix","icon","style","color","placeholder","size","onChange","changeValue","bind","chooes","es_checkbox","href","es_button","htmlType","onClick","key","e","value","target","defineProperty","Component","connect","bindActionCreators","allAction","create","module","exports","login-form-button"],"mappings":"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","file":"static/js/33.efe06a5f.chunk.js","sourcesContent":["import Cookie from \"js-cookie\"\r\nconst headers = new Headers({\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n    'authorization': Cookie.get('authorization'),\r\n    'api-request':\"yes\"\r\n});\r\nlet farams = (data) => {\r\n    return Object.entries(data).map(item => `${item[0]}=${typeof item[1] === 'object' ? JSON.stringify(item[1]):item[1]}`).join(\"&\")\r\n}\r\n\r\nexport default {\r\n    get(url,data={}){\r\n        return fetch(url+\"?\"+farams(data),{\r\n            method:\"GET\",\r\n            headers\r\n        }).then(res=>{\r\n            if(res.ok){\r\n                return res.json()\r\n            }else{\r\n                return Promise.reject(res)\r\n            }\r\n        })\r\n    },\r\n    post(url,data){\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            credentials: 'include',\r\n            headers,\r\n            body:JSON.stringify(data)\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(res)\r\n            }\r\n        })\r\n    }\r\n}","import request from \"@/utils/request\"\r\nexport const login=(body)=>request.post(\"/user/login\",body)","import { login } from \"@/api/user\"\r\nimport { message } from \"antd\"\r\nimport { SETINFO } from \"../actionTypes\"\r\nexport const setInfo = (body, history) => {\r\n  let { userName, userPwd, checked } = body\r\n  window.localStorage.setItem(\"tzn_user_name\", userName);\r\n  return async (dispatch) => {\r\n    try {\r\n      let res = await login(body)\r\n      if (res.code) {\r\n        if (checked) {\r\n          window.localStorage.setItem(\"tzn_user_pwd\", userPwd);\r\n        } else {\r\n          window.localStorage.setItem(\"tzn_user_pwd\", \"\");\r\n        }\r\n        document.cookie = `authorization=${res.data.token}`\r\n        setTimeout(() => {\r\n          history.push(\"/\")\r\n        }, 0);\r\n      }\r\n      dispatch({\r\n        type: SETINFO,\r\n        data: {\r\n          ...res.data,\r\n          limitView: res.data.limitView.filter(i => i.routeIsVisible)\r\n        }\r\n      })\r\n    } catch (error) {\r\n      let res = await error.json()\r\n      message.error(res.msg)\r\n    }\r\n\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\r\nimport css from \"./styles/login.module.scss\"\r\nimport \"./styles/login.scss\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport * as allAction from \"@/store/user/user.actions\"\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    userName: window.localStorage.getItem(\"tzn_user_name\") || \"\",\r\n    userPwd: window.localStorage.getItem(\"tzn_user_pwd\") || \"\",\r\n    checked: !!window.localStorage.getItem(\"tzn_user_pwd\")\r\n  }\r\n  render() {\r\n    let { userName, userPwd, checked } = this.state\r\n    let { getFieldDecorator } = this.props.form\r\n    return (\r\n      <div className={css.wrap}>\r\n        <div className={css.content}>\r\n          <Form className=\"login-form\">\r\n            <Form.Item>\r\n              {getFieldDecorator('userName', {\r\n                initialValue: userName,\r\n                rules: [{\r\n                  required: true,\r\n                  message: '用户名不能为空'\r\n                },\r\n                {\r\n                  min: 5, max: 10,\r\n                  message: '长度不在范围内'\r\n                },\r\n                {\r\n                  pattern: new RegExp('^\\\\w+$', 'g'),\r\n                  message: '用户名必须为字母或者数字'\r\n                }],\r\n              })(\r\n                <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"请输入用户名\"\r\n                  size=\"large\"\r\n                  onChange={this.changeValue.bind(this, 'userName')}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('userPwd', {\r\n                  initialValue: userPwd,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: '密码不能为空'\r\n                  }]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"请输入密码\"\r\n                    size=\"large\"\r\n                    onChange={this.changeValue.bind(this, 'userPwd')}\r\n                  />\r\n                )\r\n              }\r\n            </Form.Item>\r\n            <Form.Item className={`${css.chooes} chooes`}>\r\n              <Checkbox checked={checked} onChange={this.check}>记住密码</Checkbox>\r\n              <a className=\"login-form-forgot\" href=\"https://www.baidu.com\">忘记密码</a>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className={css[\"login-form-button\"]} onClick={this.login}>登录</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  check = () => {\r\n    let { checked } = this.state\r\n    this.setState({\r\n      checked: !checked\r\n    })\r\n  }\r\n  changeValue(key, e) {\r\n    let value = e.target.value.trim()\r\n    this.setState({\r\n      [key]: value\r\n    })\r\n  }\r\n  login = async () => {\r\n    let { userName, userPwd } = this.state\r\n    if (userName.trim() === \"\" || userPwd.trim() === \"\") {\r\n      message.error('用户名或密码不能为空');\r\n    } else {\r\n      this.props.setInfo(this.state, this.props.history)\r\n    }\r\n  }\r\n}\r\nexport default connect(state => ({}), dispatch => bindActionCreators(allAction, dispatch))(Form.create()(Login))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"login_wrap__2VVfz\",\"content\":\"login_content__9iTbi\",\"chooes\":\"login_chooes__GiG2K\",\"login-form-button\":\"login_login-form-button__11OPZ\"};"],"sourceRoot":""}